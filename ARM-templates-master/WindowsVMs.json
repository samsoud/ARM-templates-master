{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
	"parameters": {
		"artifactsBaseLocation": {
			"type": "string",
			"defaultValue": "https://storageaccount1235.blob.core.windows.net/templates"
		},
		"artifactsBaseLocationSasToken": {
			"type": "securestring",
			"defaultValue": ""
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Storage Account where diagnostics will be stored."
			}
		},

		"production": {
			"type": "string",
			"allowedValues": [
				"Yes",
				"No"
			],
			"metadata": {
				"description": "Select whether the VM should be in production or not."
			}
		},




		"adminUsername": {
			"type": "string",
			"minLength": 1,
			"defaultValue": "hOrg9",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "User password for the Virtual Machine."
			}
		},
		"vmName": {
			"type": "string",
			"defaultValue": "win",
			"minLength": 1,
			"maxLength": 64,
			"metadata": {
				"description": "Prefix for the name of the Windows VM (case insensitive Alphanumeric, underscore, and hyphen)."
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Basic_A0",
			"allowedValues": [
				"Standard_DS1_v2",
				"Standard_DS2_v2",
				"Standard_DS3_v2",
				"Standard_DS4_v2",
				"Standard_DS5_v2",
				"Standard_DS11_v2",
				"Standard_DS12_v2",
				"Standard_DS13_v2",
				"Standard_DS14_v2",
				"Standard_DS15_v2",
				"Standard_DS2_v2_Promo",
				"Standard_DS3_v2_Promo",
				"Standard_DS4_v2_Promo",
				"Standard_DS5_v2_Promo",
				"Standard_DS11_v2_Promo",
				"Standard_DS12_v2_Promo",
				"Standard_DS13_v2_Promo",
				"Standard_DS14_v2_Promo",
				"Standard_F1s",
				"Standard_F2s",
				"Standard_F4s",
				"Standard_F8s",
				"Standard_F16s",
				"Standard_A0",
				"Standard_A1",
				"Standard_A2",
				"Standard_A3",
				"Standard_A5",
				"Standard_A4",
				"Standard_A6",
				"Standard_A7",
				"Basic_A0",
				"Basic_A1",
				"Basic_A2",
				"Basic_A3",
				"Basic_A4",
				"Standard_D1_v2",
				"Standard_D2_v2",
				"Standard_D3_v2",
				"Standard_D4_v2",
				"Standard_D5_v2",
				"Standard_D11_v2",
				"Standard_D12_v2",
				"Standard_D13_v2",
				"Standard_D14_v2",
				"Standard_D15_v2",
				"Standard_D2_v2_Promo",
				"Standard_D3_v2_Promo",
				"Standard_D4_v2_Promo",
				"Standard_D5_v2_Promo",
				"Standard_D11_v2_Promo",
				"Standard_D12_v2_Promo",
				"Standard_D13_v2_Promo",
				"Standard_D14_v2_Promo",
				"Standard_F1",
				"Standard_F2",
				"Standard_F4",
				"Standard_F8",
				"Standard_F16",
				"Standard_A1_v2",
				"Standard_A2m_v2",
				"Standard_A2_v2",
				"Standard_A4m_v2",
				"Standard_A4_v2",
				"Standard_A8m_v2",
				"Standard_A8_v2",
				"Standard_D1",
				"Standard_D2",
				"Standard_D3",
				"Standard_D4",
				"Standard_D11",
				"Standard_D12",
				"Standard_D13",
				"Standard_D14",
				"Standard_DS1",
				"Standard_DS2",
				"Standard_DS3",
				"Standard_DS4",
				"Standard_DS11",
				"Standard_DS12",
				"Standard_DS13",
				"Standard_DS14",
				"Standard_G1",
				"Standard_G2",
				"Standard_G3",
				"Standard_G4",
				"Standard_G5",
				"Standard_GS1",
				"Standard_GS2",
				"Standard_GS3",
				"Standard_GS4",
				"Standard_GS5",
				"Standard_L4s",
				"Standard_L8s",
				"Standard_L16s",
				"Standard_L32s",
				"Standard_A8",
				"Standard_A9",
				"Standard_A10",
				"Standard_A11",
				"Standard_H8",
				"Standard_H16",
				"Standard_H8m",
				"Standard_H16m",
				"Standard_H16r",
				"Standard_H16mr"
			],
			"metadata": {
				"description": "Size to make the VM."
			}
		},

		"needsAvailabilitySet": {

			"type": "string",
			"allowedValues": [
				"Yes",
				"No"
			],
			"defaultValue": "No",
			"metadata": {
				"description": "True if VM(s) need to be placed into an Availability Set"
			}
		},
		"faultDomains": {
			"type": "int",
			"defaultValue": 2,
			"minValue": 2,
			"maxValue": 4,
			"metadata": {
				"description": "Number of fault domains in the Availability set"
			}
		},
		"updateDomains": {
			"type": "int",
			"defaultValue": 2,
			"minValue": 2,
			"maxValue": 4,
			"metadata": {
				"description": "Number of update domains in the Availability set"
			}
		},
		"vmCountStart": {
			"type": "int",
			"minValue": 0,
			"maxValue": 250,
			"defaultValue": 1,
			"metadata": {
				"description": "Start of numbering for VMs (to permit discontinious ranges)."
			}
		},
		"vmCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 200,
			"defaultValue": 1,
			"metadata": {
				"description": "How many machines to deploy."
			}
		},
		"numDataDisks": {
			"type": "int",
			"minValue": 1,
			"defaultValue": 1,
			"maxValue": 64,
			"metadata": {
				"description": "This parameter allows the user to select the NUMBER of disks they want on each VM"
			}
		},
		"sizeOfDataDisksInGB": {
			"type": "int",
			"allowedValues": [
				32,
				64,
				128,
				512,
				1024,
				2048,
				4095
			],
			"defaultValue": 32,
			"metadata": {
				"description": "Specify the SIZE of each data disk"
			}
		},
		"os": {
			"type": "string",
			"allowedValues": [
				"2012-Datacenter",
				"2012-R2-Datacenter",
				"2016-Datacenter"
			],
			"defaultValue": "2012-R2-Datacenter",
			"metadata": {
				"description": "The Operating System to be loaded."
			}
		},
		"virtualSubnetName": {
			"type": "string",
			"defaultValue": "application1",
			"allowedValues": [
				"management",
				"application1",
				"application2",
				"application3"
			],
			"metadata": {
				"description": "The subnet for the VM."
			}
		},
		"environment": {
			"type": "string",
			"allowedValues": [
				"PreProd",
				"Prod"
			],
			"metadata": {
				"description": "Indicates whether the VM is for PreProd or Prod"
			}
		}
	},

  "variables": {
    "osPublisher": "MicrosoftWindowsServer",
    "osOffer": "WindowsServer",
    "availabilitySetName": "[concat(parameters('vmName'), '-AvailSet')]",
    "nicName": "-nic",
    "pubifName": "-pub",
    "extName": "-ext",
    
    "uriExt": "[concat(parameters('artifactsBaseLocation'),'/nested/WindowsStdExt.json', parameters('artifactsBaseLocationSasToken'))]"
  },

  "resources": [
	{
		"apiVersion": "2017-03-30",
		"condition": "[equals(parameters('production'), 'Yes')]",
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[variables('availabilitySetName')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"platformFaultDomainCount": "[parameters('faultDomains')]",
			"platformUpdateDomainCount": "[parameters('updateDomains')]"
		},
		"availabilitySet": {
			"id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
		},
		"sku": {
			"name": "Aligned"
		}
	},

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('nicName'))]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uriNic')]"
        },
        "parameters": {
          "nicName": { "value": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('nicName'))]" },
          "subnetID": { "value": "[parameters('virtualSubnetName')]" 
        }
      }
    },

    {
      "apiVersion": "2016-04-30-preview",
      "condition": "[greater(parameters('numDataDisks'), 0)]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'))]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('vmCount')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('nicName')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": "[if(parameters('needsAvailabilitySet'), variables('availabilitySet'), json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osPublisher')]",
            "offer": "[variables('osOffer')]",
            "sku": "[parameters('os')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0')),'-osdisk')]",
            "createOption": "FromImage"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('numDataDisks')]",
              "input": {
                "name": "[concat(concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0')),'-datadisk',copyIndex('dataDisks'))]",
                "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('nicName')))]"
            }
          ]
        }
      }
    },

		{
			"apiVersion": "2015-06-15",
			"condition": "[equals(parameters('production'), 'Yes')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": { "value": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('pubifName'))]" },
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": { "value": "[concat(parameters('vmName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'))]" }
				}
			}
		},
 

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat(parameters('VMName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'), variables('extName'))]",
      "copy": {
        "name": "extLoop",
        "count": "[parameters('vmCount')]"
      },
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "vmLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('uriExt')]"
        },
        "parameters": {
          "VMName": { "value": "[concat(parameters('VMName'), padleft(copyindex(parameters('vmCountStart')), 3, '0'))]" },
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "environment": { "value": "[parameters('environment')]" },
          "scriptStorageAccountKey": {
            "reference": {
              "keyVault": {
                "id": "/subscriptions/303d8f06-2e6b-4f7b-b12f-3e974542ae62/resourceGroups/CloudEngArtifacts/providers/Microsoft.KeyVault/vaults/CloudEngKeyVault"
              },
              "secretName": "OrgBinRepoKey"
            }
          }
        }
      }
    },
  ],

  "outputs": {
  }
}
