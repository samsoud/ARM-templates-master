{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {

    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Vault (limit 11 characters) as a unique 13 character suffix will be appended."
      }
    },

    "objectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AD user. Get using Get-AzureRmADUser or Get-AzureRmADServicePrincipal cmdlets"
      }
    },

    "keysPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ],
      "metadata": {
        "description": "Permissions to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },

    "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ],
      "metadata": {
        "description": "Permissions to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },

    "certificatePermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ],
      "metadata": {
        "description": "Permissions to certificate in the vault. Valid values are: all, get, list, delete, create, import, update, managecontacts, getissuers, listissuers, setissuers, deleteissuers, manageissuers, recover, purge."
      }
    },

    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },

    "enableVaultOrgeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    },

    "enableVaultOrgiskEncryption": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      }
    },

    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      }
    }
  },
  
  
  
  "variables": {
    "UniqueKeyVaultName": "[concat(parameters('keyVaultName'), uniqueString(resourceGroup().id))]"
  },



  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('UniqueKeyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabledOrgeployment": "[parameters('enableVaultOrgeployment')]",
        "enabledOrgiskEncryption": "[parameters('enableVaultOrgiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('objectId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]",
              "certificates": "[parameters('certificatePermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        }
      }
    }
  ],

  "outputs": {
    "vaultOutput": {
      "value": "[reference(variables('UniqueKeyVaultName'))]",
      "type": "object"
    }
  }
}
